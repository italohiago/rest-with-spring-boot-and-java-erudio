package br.com.erudio.controller;

import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class MathController {
	@RequestMapping(value = "/sum/{numberOne}/{numberTwo}", method=RequestMethod.GET)
	public double sum(
			@PathVariable(value = "numberOne") String numberOne,
			@PathVariable(value = "numberTwo") String numberTwo
			) throws Exception{
			if(!numberOne.isEmpty() && isDouble(numberOne) && !numberTwo.isEmpty() && isDouble(numberTwo)) {
				Double n1 = Double.parseDouble(numberOne);
				Double n2 = Double.parseDouble(numberTwo);
				return (n1 + n2);
			}else {
				throw new UnsupportedOperationException("Please set a numeric value");
			}
			
		}
	
	@RequestMapping(value = "/mul/{numberOne}/{numberTwo}", method=RequestMethod.GET)
	public double mul(
			@PathVariable(value = "numberOne") String numberOne,
			@PathVariable(value = "numberTwo") String numberTwo
			) throws Exception{
			if(!numberOne.isEmpty() && isDouble(numberOne) && !numberTwo.isEmpty() && isDouble(numberTwo)) {
				Double n1 = Double.parseDouble(numberOne);
				Double n2 = Double.parseDouble(numberTwo);
				return (n1 * n2);
			}else {
				throw new UnsupportedOperationException("Please set a numeric value");
			}
			
		}
	
	@RequestMapping(value = "/div/{numberOne}/{numberTwo}", method=RequestMethod.GET)
	public double div(
			@PathVariable(value = "numberOne") String numberOne,
			@PathVariable(value = "numberTwo") String numberTwo
			) throws Exception{
			if(!numberOne.isEmpty() && isDouble(numberOne) && !numberTwo.isEmpty() && isDouble(numberTwo)) {
				Double n1 = Double.parseDouble(numberOne);
				Double n2 = Double.parseDouble(numberTwo);
				return (n1 / n2);
			}else {
				throw new UnsupportedOperationException("Please set a numeric value");
			}
			
		}
	
	public static boolean isDouble(String strNumber) {
		try {
			Double.parseDouble(strNumber);
			return true;
		} catch (Exception e) {
			return false;
		}
	}
		
	}
	
